

drop table if exists query4;
drop view if exists ERxp;
drop view if exists ERyp;
drop view if exists EGxp;
drop view if exists EGyp;
drop view if exists EBxp;
drop view if exists EByp;
drop view if exists RB;
drop view if exists RG;
drop view if exists BR;
drop view if exists BG;
drop view if exists GR;
drop view if exists GB;
drop view if exists ERB;
drop view if exists ERG;
drop view if exists EBR;
drop view if exists EBG;
drop view if exists EGR;
drop view if exists EGB;




create table query4 (x int)
row format delimited fields terminated by ','
location '/user/cloudera/output/demo/hive/query4';


create view ERxp as
select edge.x as x, edge.y as y, case when rvertex.x IS null then false else true end as SERx
from E edge left outer join R rvertex
on edge.x = rvertex.x;

create view ERyp as
select edge.x as x, edge.y as y, case when rvertex.x IS null then false else true end as SERy
from E edge left outer join R rvertex
on edge.y = rvertex.x;


create view EGxp as
select edge.x as x, edge.y as y, case when gvertex.x IS null then false else true end as SEGx
from E edge left outer join G gvertex
on edge.x = gvertex.x;


create view EGyp as
select edge.x as x, edge.y as y, case when gvertex.x IS null then false else true end as SEGy
from E edge left outer join G gvertex
on edge.y = gvertex.x;


create view EBxp as
select edge.x as x, edge.y as y, case when bvertex.x IS null then false else true end as SEBx
from E edge left outer join B bvertex
on edge.x = bvertex.x;


create view EByp as
select edge.x as x, edge.y as y, case when bvertex.x IS null then false else true end as SEBy
from E edge left outer join B bvertex
on edge.y = bvertex.x;


create view RB as
select ERxp.x as x
from ERxp left outer join EByp
on (ERxp.x = EByp.x and ERxp.y = EByp.y) 
where (SERx = true and SEBy = true);

create view RG as
select ERxp.x as x
from ERxp left outer join EGyp
on (ERxp.x = EGyp.x and ERxp.y = EGyp.y) 
where (SERx = true and SEGy = true);

create view BR as
select EBxp.x as x
from EBxp left outer join ERyp
on (EBxp.x = ERyp.x and EBxp.y = ERyp.y) 
where (SEBx = true and SERy = true);

create view BG as
select EBxp.x as x
from EBxp left outer join EGyp
on (EBxp.x = EGyp.x and EBxp.y = EGyp.y) 
where (SEBx = true and SEGy = true);

create view GB as
select EGxp.x as x
from EGxp left outer join EByp
on (EGxp.x = EByp.x and EGxp.y = EByp.y) 
where (SEGx = true and SEBy = true);

create view GR as
select EGxp.x as x
from EGxp left outer join ERyp
on (EGxp.x = ERyp.x and EGxp.y = ERyp.y) 
where (SEGx = true and SERy = true);


                   
create view ERB as
select edge.x as x, edge.y as y, case when vertex.x IS null then false else true end as SERBx
from E edge left outer join RB vertex
on edge.x = vertex.x;                   

create view ERG as
select edge.x as x, edge.y as y, case when vertex.x IS null then false else true end as SERGx
from E edge left outer join RG vertex
on edge.x = vertex.x;                   

create view EBR as
select edge.x as x, edge.y as y, case when vertex.x IS null then false else true end as SEBRx
from E edge left outer join BR vertex
on edge.x = vertex.x;                   

create view EBG as
select edge.x as x, edge.y as y, case when vertex.x IS null then false else true end as SEBGx
from E edge left outer join BG vertex
on edge.x = vertex.x;                   

create view EGB as
select edge.x as x, edge.y as y, case when vertex.x IS null then false else true end as SEGBx
from E edge left outer join GB vertex
on edge.x = vertex.x;                   

create view EGR as
select edge.x as x, edge.y as y, case when vertex.x IS null then false else true end as SEGRx
from E edge left outer join GR vertex
on edge.x = vertex.x;   


insert overwrite table query4
select ERB.x
from ERB 
left outer join ERG
on (ERB.x = ERG.x and ERB.y = ERG.y) 
left outer join EBG
on (ERB.x = EBG.x and ERB.y = EBG.y) 
left outer join EBR
on (ERB.x = EBR.x and ERB.y = EBR.y) 
left outer join EGR
on (ERB.x = EGR.x and ERB.y = EGR.y) 
left outer join EGB
on (ERB.x = EGB.x and ERB.y = EGB.y) 
where (SERGx = false and SERBx = false and
       SEGBx = false and SEGRx = false and
       SEBGx = false and SEBRx = false
       );












                
                   