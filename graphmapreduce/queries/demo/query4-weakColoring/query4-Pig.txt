



E = load '/user/cloudera/input/query4/E' using PigStorage(',') as (x:int,y:int);
R = load '/user/cloudera/input/query4/R' using PigStorage(',') as (x:int);
G = load '/user/cloudera/input/query4/G' using PigStorage(',') as (x:int);
B = load '/user/cloudera/input/query4/B' using PigStorage(',') as (x:int);

                  
                  
ERx = cogroup E by x, R by x;
ERxp = foreach ERx generate flatten(E), (IsEmpty(R)? null : 0) as SERx;

ERy = cogroup E by y, R by x;
ERyp = foreach ERy generate flatten(E), (IsEmpty(R)? null : 0) as SERy;

EGx = cogroup E by x, G by x;
EGxp = foreach EGx generate flatten(E), (IsEmpty(G)? null : 0) as SEGx;

EGy = cogroup E by y, G by x;
EGyp = foreach EGy generate flatten(E), (IsEmpty(G)? null : 0) as SEGy;

EBx = cogroup E by x, B by x;
EBxp = foreach EBx generate flatten(E), (IsEmpty(B)? null : 0) as SEBx;

EBy = cogroup E by y, B by x;
EByp = foreach EBy generate flatten(E), (IsEmpty(B)? null : 0) as SEBy;


RB0 = cogroup ERxp by (x,y), EByp by (x,y); 
RB1 = foreach RB0 generate group, flatten(ERxp.SERx),flatten(EByp.SEBy);              
RB2 = filter RB1 by (SERx is not null AND SEBy is not null); 
RB = foreach RB2 generate ERxp.x;

RG0 = cogroup ERxp by (x,y), EGyp by (x,y); 
RG1 = foreach RG0 generate group, flatten(ERxp.SERx),flatten(EGyp.SEGy);              
RG2 = filter RG1 by (SERx is not null AND SEGy is not null); 
RG = foreach RG2 generate ERxp.x;

BR0 = cogroup EBxp by (x,y), ERyp by (x,y); 
BR1 = foreach BR0 generate group, flatten(EBxp.SEBx),flatten(ERyp.SERy);              
BR2 = filter BR1 by (SEBx is not null AND SERy is not null); 
BR = foreach BR2 generate EBxp.x;

BG0 = cogroup EBxp by (x,y), EGyp by (x,y); 
BG1 = foreach BG0 generate group, flatten(EBxp.SEBx),flatten(EGyp.SEGy);              
BG2 = filter BG1 by (SEBx is not null AND SEGy is not null); 
BG = foreach BG2 generate EBxp.x;

GB0 = cogroup EGxp by (x,y), EByp by (x,y); 
GB1 = foreach GB0 generate group, flatten(EGxp.SEGx),flatten(EByp.SEBy);              
GB2 = filter GB1 by (SEGx is not null AND SEBy is not null); 
GB = foreach GB2 generate EGxp.x;

GR0 = cogroup EGxp by (x,y), ERyp by (x,y); 
GR1 = foreach GR0 generate group, flatten(EGxp.SEGx),flatten(ERyp.SERy);              
GR2 = filter GR1 by (SEGx is not null AND SERy is not null); 
GR = foreach GR2 generate EGxp.x;



ERBx = cogroup E by x, RB by x;
ERBxp = foreach ERBx generate flatten(E), (IsEmpty(RB)? null : 0) as SERBx;

ERGx = cogroup E by x, RG by x;
ERGxp = foreach ERGx generate flatten(E), (IsEmpty(RG)? null : 0) as SERGx;

EBRx = cogroup E by x, BR by x;
EBRxp = foreach EBRx generate flatten(E), (IsEmpty(BR)? null : 0) as SEBRx;

EBGx = cogroup E by x, BG by x;
EBGxp = foreach EBGx generate flatten(E), (IsEmpty(BG)? null : 0) as SEBGx;

EGRx = cogroup E by x, GR by x;
EGRxp = foreach EGRx generate flatten(E), (IsEmpty(GR)? null : 0) as SEGRx;

EGBx = cogroup E by x, GB by x;
EGBxp = foreach EGBx generate flatten(E), (IsEmpty(GB)? null : 0) as SEGBx;


X = cogroup ERBxp by (x,y), ERGxp by (x,y),
            EBRxp by (x,y), EBGxp by (x,y),
            EGBxp by (x,y), EGRxp by (x,y); 
Y = foreach X generate group, flatten(ERBxp.SERBx),
                              flatten(ERGxp.SERGx),
                              flatten(EBRxp.SEBRx),
                              flatten(EBGxp.SEBGx),
                              flatten(EGBxp.SEGBx),
                              flatten(EGRxp.SEGRx);

Z = filter Y by (SERBx is null AND 
                   SERGx is null AND
                   SEBRx is null AND 
                   SEBGx is null AND 
                   SEGRx is null AND 
                   SEGBx is null); 
-- describe Y;

-- describe Z;

Zout = foreach Z generate E.x;
                   
Store Zout into '/user/cloudera/output/demo/pig/query4';          
                   
                   
                   
                   
